{"ast":null,"code":"var _jsxFileName = \"/Users/ihzaan/Documents/GitHub/EV-Connect/frontend/src/components/MangeStation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAP_API_KEY = \"AIzaSyAS9zfp0wdczlh-d1WDk1VHAbsTrhsDg-E\"; // Replace with your API key\n\nconst ManageStations = () => {\n  _s();\n  const [stations, setStations] = useState([]);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    latitude: \"\",\n    longitude: \"\",\n    slots: \"\"\n  });\n  const [markerPosition, setMarkerPosition] = useState(null);\n  const navigate = useNavigate();\n  const handleMapClick = event => {\n    const lat = event.latLng.lat();\n    const lng = event.latLng.lng();\n    setMarkerPosition({\n      lat,\n      lng\n    });\n    setFormData({\n      ...formData,\n      latitude: lat,\n      longitude: lng\n    });\n  };\n  const useCurrentLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const lat = position.coords.latitude;\n        const lng = position.coords.longitude;\n        setMarkerPosition({\n          lat,\n          lng\n        });\n        setFormData({\n          ...formData,\n          latitude: lat,\n          longitude: lng\n        });\n      }, error => {\n        console.error(\"Error getting location:\", error);\n      });\n    } else {\n      alert(\"Geolocation is not supported by this browser.\");\n    }\n  };\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleAddStation = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:5006/api/stations\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        fetchStations();\n        setFormData({\n          name: \"\",\n          latitude: \"\",\n          longitude: \"\",\n          slots: \"\"\n        });\n        setMarkerPosition(null);\n      }\n    } catch (error) {\n      console.error(\"Error adding station:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Charging Stations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddStation,\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Station Name\",\n        value: formData.name,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"slots\",\n        placeholder: \"Total Slots\",\n        value: formData.slots,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: useCurrentLocation,\n        children: \"Use Current Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Station\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: MAP_API_KEY,\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: {\n          width: \"100%\",\n          height: \"400px\"\n        },\n        center: markerPosition || {\n          lat: 12.9716,\n          lng: 77.5946\n        },\n        zoom: markerPosition ? 15 : 10,\n        onClick: handleMapClick,\n        children: markerPosition && /*#__PURE__*/_jsxDEV(Marker, {\n          position: markerPosition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageStations, \"KfpRT5M4t1vScvFRqhV+UbAMOcY=\", false, function () {\n  return [useNavigate];\n});\n_c = ManageStations;\nexport default ManageStations;\nvar _c;\n$RefreshReg$(_c, \"ManageStations\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","MAP_API_KEY","ManageStations","_s","stations","setStations","formData","setFormData","name","latitude","longitude","slots","markerPosition","setMarkerPosition","navigate","handleMapClick","event","lat","latLng","lng","useCurrentLocation","navigator","geolocation","getCurrentPosition","position","coords","error","console","alert","handleChange","e","target","value","handleAddStation","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","fetchStations","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","marginBottom","type","placeholder","onChange","required","onClick","googleMapsApiKey","mapContainerStyle","width","height","center","zoom","_c","$RefreshReg$"],"sources":["/Users/ihzaan/Documents/GitHub/EV-Connect/frontend/src/components/MangeStation.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\n\nconst MAP_API_KEY = \"AIzaSyAS9zfp0wdczlh-d1WDk1VHAbsTrhsDg-E\"; // Replace with your API key\n\nconst ManageStations = () => {\n  const [stations, setStations] = useState([]);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    latitude: \"\",\n    longitude: \"\",\n    slots: \"\",\n  });\n  const [markerPosition, setMarkerPosition] = useState(null);\n  const navigate = useNavigate();\n\n  const handleMapClick = (event) => {\n    const lat = event.latLng.lat();\n    const lng = event.latLng.lng();\n    setMarkerPosition({ lat, lng });\n    setFormData({ ...formData, latitude: lat, longitude: lng });\n  };\n\n  const useCurrentLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const lat = position.coords.latitude;\n          const lng = position.coords.longitude;\n          setMarkerPosition({ lat, lng });\n          setFormData({ ...formData, latitude: lat, longitude: lng });\n        },\n        (error) => {\n          console.error(\"Error getting location:\", error);\n        }\n      );\n    } else {\n      alert(\"Geolocation is not supported by this browser.\");\n    }\n  };\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleAddStation = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:5006/api/stations\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(formData),\n      });\n\n      if (response.ok) {\n        fetchStations();\n        setFormData({ name: \"\", latitude: \"\", longitude: \"\", slots: \"\" });\n        setMarkerPosition(null);\n      }\n    } catch (error) {\n      console.error(\"Error adding station:\", error);\n    }\n  };\n\n  return (\n    <div style={{ textAlign: \"center\", padding: \"20px\" }}>\n      <h2>Manage Charging Stations</h2>\n\n      {/* Add Station Form */}\n      <form onSubmit={handleAddStation} style={{ marginBottom: \"20px\" }}>\n        <input type=\"text\" name=\"name\" placeholder=\"Station Name\" value={formData.name} onChange={handleChange} required />\n        <input type=\"number\" name=\"slots\" placeholder=\"Total Slots\" value={formData.slots} onChange={handleChange} required />\n        <button type=\"button\" onClick={useCurrentLocation}>Use Current Location</button>\n        <button type=\"submit\">Add Station</button>\n      </form>\n\n      {/* Google Map */}\n      <LoadScript googleMapsApiKey={MAP_API_KEY}>\n        <GoogleMap\n          mapContainerStyle={{ width: \"100%\", height: \"400px\" }}\n          center={markerPosition || { lat: 12.9716, lng: 77.5946 }}\n          zoom={markerPosition ? 15 : 10}\n          onClick={handleMapClick}\n        >\n          {markerPosition && <Marker position={markerPosition} />}\n        </GoogleMap>\n      </LoadScript>\n    </div>\n  );\n};\n\nexport default ManageStations;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}