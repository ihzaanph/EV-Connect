{"ast":null,"code":"var _jsxFileName = \"/Users/ihzaan/Documents/GitHub/EV-Connect/frontend/src/components/ViewstationEVuser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport \"../styles/ViewStationEVuser.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewStations = () => {\n  _s();\n  const [stations, setStations] = useState([]);\n  const [selectedStation, setSelectedStation] = useState(null);\n  useEffect(() => {\n    fetchStations();\n  }, []);\n\n  // Fetch Charging Stations\n  const fetchStations = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5006/api/charging-stations-evuser\");\n      const data = await response.json();\n      setStations(data);\n    } catch (error) {\n      console.error(\"Error fetching stations:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Charging Stations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"AIzaSyAS9zfp0wdczlh-d1WDk1VHAbsTrhsDg-E\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: {\n          width: \"100%\",\n          height: \"500px\"\n        },\n        center: {\n          lat: 10.0,\n          lng: 76.0\n        } // Default center (adjust as needed)\n        ,\n        zoom: 10,\n        children: [stations.map(station => /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: station.latitude,\n            lng: station.longitude\n          },\n          onClick: () => setSelectedStation(station)\n        }, station._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)), selectedStation && /*#__PURE__*/_jsxDEV(InfoWindow, {\n          position: {\n            lat: selectedStation.latitude,\n            lng: selectedStation.longitude\n          },\n          onCloseClick: () => setSelectedStation(null),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: selectedStation.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Status: \", selectedStation.operationalStatus]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewStations, \"ZLFFXyx81HIQf73cb4A34Npj9n4=\");\n_c = ViewStations;\nexport default ViewStations;\nvar _c;\n$RefreshReg$(_c, \"ViewStations\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","LoadScript","Marker","InfoWindow","jsxDEV","_jsxDEV","ViewStations","_s","stations","setStations","selectedStation","setSelectedStation","fetchStations","response","fetch","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","googleMapsApiKey","mapContainerStyle","width","height","center","lat","lng","zoom","map","station","position","latitude","longitude","onClick","_id","onCloseClick","name","operationalStatus","_c","$RefreshReg$"],"sources":["/Users/ihzaan/Documents/GitHub/EV-Connect/frontend/src/components/ViewstationEVuser.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport \"../styles/ViewStationEVuser.css\";\n\nconst ViewStations = () => {\n  const [stations, setStations] = useState([]);\n  const [selectedStation, setSelectedStation] = useState(null);\n\n  useEffect(() => {\n    fetchStations();\n  }, []);\n\n  // Fetch Charging Stations\n  const fetchStations = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5006/api/charging-stations-evuser\");\n      const data = await response.json();\n      setStations(data);\n    } catch (error) {\n      console.error(\"Error fetching stations:\", error);\n    }\n  };\n\n  return (\n    <div className=\"map-container\">\n      <h2>Charging Stations</h2>\n      <LoadScript googleMapsApiKey=\"AIzaSyAS9zfp0wdczlh-d1WDk1VHAbsTrhsDg-E\">\n        <GoogleMap\n          mapContainerStyle={{ width: \"100%\", height: \"500px\" }}\n          center={{ lat: 10.0, lng: 76.0 }} // Default center (adjust as needed)\n          zoom={10}\n        >\n          {stations.map((station) => (\n            <Marker\n              key={station._id}\n              position={{ lat: station.latitude, lng: station.longitude }}\n              onClick={() => setSelectedStation(station)}\n            />\n          ))}\n\n          {/* Show Info Window on Click */}\n          {selectedStation && (\n            <InfoWindow\n              position={{ lat: selectedStation.latitude, lng: selectedStation.longitude }}\n              onCloseClick={() => setSelectedStation(null)}\n            >\n              <div>\n                <h4>{selectedStation.name}</h4>\n                <p>Status: {selectedStation.operationalStatus}</p>\n              </div>\n            </InfoWindow>\n          )}\n        </GoogleMap>\n      </LoadScript>\n    </div>\n  );\n};\n\nexport default ViewStations;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}