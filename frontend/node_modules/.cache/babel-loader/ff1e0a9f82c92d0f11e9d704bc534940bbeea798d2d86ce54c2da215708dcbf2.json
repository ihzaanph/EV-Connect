{"ast":null,"code":"var _jsxFileName = \"/Users/ihzaan/Documents/GitHub/EV-Connect/frontend/src/components/UpdateSlotOpr.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useUser } from \"../context/UserContext\";\nimport \"../styles/UpdateSlot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateSlot = () => {\n  _s();\n  const {\n    user\n  } = useUser();\n  const [stationsWithSlots, setStationsWithSlots] = useState([]);\n  useEffect(() => {\n    fetchSlots();\n  }, []);\n\n  // Fetch slots for the operator\n  const fetchSlots = async () => {\n    try {\n      const response = await fetch(`http://localhost:5006/api/operator/slots/${user.id}`);\n      const data = await response.json();\n      setStationsWithSlots(data);\n    } catch (error) {\n      console.error(\"Error fetching slots:\", error);\n    }\n  };\n\n  // Toggle Slot Availability\n  const toggleSlotStatus = async (slotId, currentStatus) => {\n    const newStatus = currentStatus === \"available\" ? \"notavailable\" : \"available\";\n    try {\n      const response = await fetch(`http://localhost:5006/api/slots/update/${slotId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          operationalStatus: newStatus\n        })\n      });\n      if (response.ok) {\n        alert(\"Slot status updated successfully!\");\n        fetchSlots(); // Refresh slot data\n      } else {\n        alert(\"Failed to update slot status.\");\n      }\n    } catch (error) {\n      console.error(\"Error updating slot status:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"update-slot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Slots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), stationsWithSlots.length > 0 ? stationsWithSlots.map(station => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"station-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: station.stationName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"slot-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Time Slot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: station.slots.map(slot => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [slot.from, \" - \", slot.to]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: slot.operationalStatus === \"available\" ? \"available\" : \"notavailable\",\n              children: slot.operationalStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `toggle-btn ${slot.operationalStatus}`,\n                onClick: () => toggleSlotStatus(slot._id, slot.operationalStatus),\n                children: slot.operationalStatus === \"available\" ? \"Make Not Available\" : \"Make Available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this)]\n          }, slot._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, station.stationId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No slots available for your stations.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateSlot, \"1aWd3tvFSEUMlctysDK3QkUXzn4=\", false, function () {\n  return [useUser];\n});\n_c = UpdateSlot;\nexport default UpdateSlot;\nvar _c;\n$RefreshReg$(_c, \"UpdateSlot\");","map":{"version":3,"names":["React","useEffect","useState","useUser","jsxDEV","_jsxDEV","UpdateSlot","_s","user","stationsWithSlots","setStationsWithSlots","fetchSlots","response","fetch","id","data","json","error","console","toggleSlotStatus","slotId","currentStatus","newStatus","method","headers","body","JSON","stringify","operationalStatus","ok","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","station","stationName","slots","slot","from","to","onClick","_id","stationId","_c","$RefreshReg$"],"sources":["/Users/ihzaan/Documents/GitHub/EV-Connect/frontend/src/components/UpdateSlotOpr.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useUser } from \"../context/UserContext\";\nimport \"../styles/UpdateSlot.css\";\n\nconst UpdateSlot = () => {\n  const { user } = useUser();\n  const [stationsWithSlots, setStationsWithSlots] = useState([]);\n\n  useEffect(() => {\n    fetchSlots();\n  }, []);\n\n  // Fetch slots for the operator\n  const fetchSlots = async () => {\n    try {\n      const response = await fetch(`http://localhost:5006/api/operator/slots/${user.id}`);\n      const data = await response.json();\n      setStationsWithSlots(data);\n    } catch (error) {\n      console.error(\"Error fetching slots:\", error);\n    }\n  };\n\n  // Toggle Slot Availability\n  const toggleSlotStatus = async (slotId, currentStatus) => {\n    const newStatus = currentStatus === \"available\" ? \"notavailable\" : \"available\";\n\n    try {\n      const response = await fetch(`http://localhost:5006/api/slots/update/${slotId}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ operationalStatus: newStatus }),\n      });\n\n      if (response.ok) {\n        alert(\"Slot status updated successfully!\");\n        fetchSlots(); // Refresh slot data\n      } else {\n        alert(\"Failed to update slot status.\");\n      }\n    } catch (error) {\n      console.error(\"Error updating slot status:\", error);\n    }\n  };\n\n  return (\n    <div className=\"update-slot-container\">\n      <h2>Manage Slots</h2>\n\n      {stationsWithSlots.length > 0 ? (\n        stationsWithSlots.map((station) => (\n          <div key={station.stationId} className=\"station-section\">\n            <h3>{station.stationName}</h3>\n            <table className=\"slot-table\">\n              <thead>\n                <tr>\n                  <th>Time Slot</th>\n                  <th>Status</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {station.slots.map((slot) => (\n                  <tr key={slot._id}>\n                    <td>{slot.from} - {slot.to}</td>\n                    <td className={slot.operationalStatus === \"available\" ? \"available\" : \"notavailable\"}>\n                      {slot.operationalStatus}\n                    </td>\n                    <td>\n                      <button\n                        className={`toggle-btn ${slot.operationalStatus}`}\n                        onClick={() => toggleSlotStatus(slot._id, slot.operationalStatus)}\n                      >\n                        {slot.operationalStatus === \"available\" ? \"Make Not Available\" : \"Make Available\"}\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ))\n      ) : (\n        <p>No slots available for your stations.</p>\n      )}\n    </div>\n  );\n};\n\nexport default UpdateSlot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}