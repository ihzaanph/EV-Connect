{"ast":null,"code":"var _jsxFileName = \"/Users/ihzaan/Documents/GitHub/EV-Connect/frontend/src/components/UpdateSlotOpr.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useUser } from \"../context/UserContext\";\nimport \"../styles/UpdateSlotOpr.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateSlot = () => {\n  _s();\n  const {\n    user\n  } = useUser();\n  const [stationsWithSlots, setStationsWithSlots] = useState([]);\n  useEffect(() => {\n    fetchSlots();\n  }, []);\n\n  // Fetch slots for the operator\n  const fetchSlots = async () => {\n    try {\n      const response = await fetch(`http://localhost:5006/api/operator/slots/${user.id}`);\n      const data = await response.json();\n      setStationsWithSlots(data);\n    } catch (error) {\n      console.error(\"Error fetching slots:\", error);\n    }\n  };\n\n  // Convert 24-hour time format (HH:MM) to 12-hour format with AM/PM\n  const convertTo12HourFormat = time => {\n    const [hour, minute] = time.split(\":\").map(Number);\n    const period = hour >= 12 ? \"PM\" : \"AM\";\n    const formattedHour = hour % 12 || 12; // Convert 0 to 12 for 12AM\n    return `${formattedHour}:${minute.toString().padStart(2, \"0\")} ${period}`;\n  };\n\n  // Toggle Slot Availability\n  const toggleSlotStatus = async (slotId, currentStatus) => {\n    const newStatus = currentStatus === \"available\" ? \"notavailable\" : \"available\";\n    try {\n      const response = await fetch(`http://localhost:5006/api/slots/update/${slotId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          operationalStatus: newStatus\n        })\n      });\n      if (response.ok) {\n        alert(\"Slot status updated successfully!\");\n        fetchSlots(); // Refresh slot data\n      } else {\n        alert(\"Failed to update slot status.\");\n      }\n    } catch (error) {\n      console.error(\"Error updating slot status:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"update-main-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"update-slot-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"MANAGE STOTS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), stationsWithSlots.length > 0 ? stationsWithSlots.map(station => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"station-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: station.stationName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"slot-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time Slot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: station.slots.map(slot => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [convertTo12HourFormat(slot.from), \" - \", convertTo12HourFormat(slot.to)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: slot.operationalStatus === \"available\" ? \"available\" : \"notavailable\",\n                children: slot.operationalStatus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `toggle-btn ${slot.operationalStatus}`,\n                  onClick: () => toggleSlotStatus(slot._id, slot.operationalStatus),\n                  children: slot.operationalStatus === \"available\" ? \"Make Not Available\" : \"Make Available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 25\n              }, this)]\n            }, slot._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, station.stationId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No slots available for your stations.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateSlot, \"1aWd3tvFSEUMlctysDK3QkUXzn4=\", false, function () {\n  return [useUser];\n});\n_c = UpdateSlot;\nexport default UpdateSlot;\nvar _c;\n$RefreshReg$(_c, \"UpdateSlot\");","map":{"version":3,"names":["React","useEffect","useState","useUser","jsxDEV","_jsxDEV","UpdateSlot","_s","user","stationsWithSlots","setStationsWithSlots","fetchSlots","response","fetch","id","data","json","error","console","convertTo12HourFormat","time","hour","minute","split","map","Number","period","formattedHour","toString","padStart","toggleSlotStatus","slotId","currentStatus","newStatus","method","headers","body","JSON","stringify","operationalStatus","ok","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","station","stationName","slots","slot","from","to","onClick","_id","stationId","_c","$RefreshReg$"],"sources":["/Users/ihzaan/Documents/GitHub/EV-Connect/frontend/src/components/UpdateSlotOpr.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useUser } from \"../context/UserContext\";\nimport \"../styles/UpdateSlotOpr.css\";\n\nconst UpdateSlot = () => {\n  const { user } = useUser();\n  const [stationsWithSlots, setStationsWithSlots] = useState([]);\n\n  useEffect(() => {\n    fetchSlots();\n  }, []);\n\n  // Fetch slots for the operator\n  const fetchSlots = async () => {\n    try {\n      const response = await fetch(`http://localhost:5006/api/operator/slots/${user.id}`);\n      const data = await response.json();\n      setStationsWithSlots(data);\n    } catch (error) {\n      console.error(\"Error fetching slots:\", error);\n    }\n  };\n\n  // Convert 24-hour time format (HH:MM) to 12-hour format with AM/PM\n  const convertTo12HourFormat = (time) => {\n    const [hour, minute] = time.split(\":\").map(Number);\n    const period = hour >= 12 ? \"PM\" : \"AM\";\n    const formattedHour = hour % 12 || 12; // Convert 0 to 12 for 12AM\n    return `${formattedHour}:${minute.toString().padStart(2, \"0\")} ${period}`;\n  };\n\n  // Toggle Slot Availability\n  const toggleSlotStatus = async (slotId, currentStatus) => {\n    const newStatus = currentStatus === \"available\" ? \"notavailable\" : \"available\";\n\n    try {\n      const response = await fetch(`http://localhost:5006/api/slots/update/${slotId}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ operationalStatus: newStatus }),\n      });\n\n      if (response.ok) {\n        alert(\"Slot status updated successfully!\");\n        fetchSlots(); // Refresh slot data\n      } else {\n        alert(\"Failed to update slot status.\");\n      }\n    } catch (error) {\n      console.error(\"Error updating slot status:\", error);\n    }\n  };\n\n  return (\n    <div className=\"update-main-container\">\n        <div className=\"update-slot-container\">\n          <h2>MANAGE STOTS</h2>\n\n          {stationsWithSlots.length > 0 ? (\n            stationsWithSlots.map((station) => (\n              <div key={station.stationId} className=\"station-section\">\n                <h3>{station.stationName}</h3>\n                <table className=\"slot-table\">\n                  <thead>\n                    <tr>\n                      <th>Time Slot</th>\n                      <th>Status</th>\n                      <th>Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {station.slots.map((slot) => (\n                      <tr key={slot._id}>\n                        <td>{convertTo12HourFormat(slot.from)} - {convertTo12HourFormat(slot.to)}</td>\n                        <td className={slot.operationalStatus === \"available\" ? \"available\" : \"notavailable\"}>\n                          {slot.operationalStatus}\n                        </td>\n                        <td>\n                          <button\n                            className={`toggle-btn ${slot.operationalStatus}`}\n                            onClick={() => toggleSlotStatus(slot._id, slot.operationalStatus)}\n                          >\n                            {slot.operationalStatus === \"available\" ? \"Make Not Available\" : \"Make Available\"}\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n        ))\n      ) : (\n        <p>No slots available for your stations.</p>\n      )}\n    </div>\n  </div>\n  );\n};\n\nexport default UpdateSlot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}