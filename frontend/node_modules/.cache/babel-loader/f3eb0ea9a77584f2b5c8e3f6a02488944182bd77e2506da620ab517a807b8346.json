{"ast":null,"code":"var _jsxFileName = \"/Users/ihzaan/Documents/GitHub/EV-Connect/frontend/src/components/EditSlots.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport \"../styles/EditSlot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditSlots = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [station, setStation] = useState({\n    name: \"Demo Station\",\n    slots: 5\n  }); // Dummy data for now\n  const [showSlotForm, setShowSlotForm] = useState(false);\n  const [slotTimes, setSlotTimes] = useState([]);\n  const [formData, setFormData] = useState({\n    from: \"\",\n    to: \"\"\n  });\n  useEffect(() => {\n    fetchStation();\n    fetchSlotTimes();\n  }, []);\n\n  // Fetch station details\n  const fetchStation = async () => {\n    try {\n      const response = await fetch(`http://localhost:5006/api/slot/stations/fetch/${id}`);\n      const data = await response.json();\n      console.log(hello);\n      setStation(data);\n    } catch (error) {\n      console.error(\"Error fetching station details:\", error);\n    }\n  };\n\n  // Fetch existing slot times\n  const fetchSlotTimes = async () => {\n    try {\n      const response = await fetch(`http://localhost:5006/api/slots/${id}`);\n      const data = await response.json();\n      setSlotTimes(data);\n    } catch (error) {\n      console.error(\"Error fetching slot times:\", error);\n    }\n  };\n\n  // Handle input change\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Add slot time to database\n  const handleAddSlot = async () => {\n    if (slotTimes.length >= station.slots) {\n      alert(\"You have reached the maximum number of slots.\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:5006/api/stations/slots/${id}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        setFormData({\n          from: \"\",\n          to: \"\"\n        });\n        setShowSlotForm(false);\n        fetchSlotTimes();\n      }\n    } catch (error) {\n      console.error(\"Error adding slot:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-slots-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"header\",\n      children: \"Edit Slots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"station-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Station Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 12\n        }, this), \" \", station.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Number of Slots:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 12\n        }, this), \" \", station.slots]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-slot-btn\",\n      onClick: () => setShowSlotForm(true),\n      children: \"\\u2795 Add Station Slot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), showSlotForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slot-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        name: \"from\",\n        value: formData.from,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        name: \"to\",\n        value: formData.to,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-btn\",\n        onClick: handleAddSlot,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"slots-header\",\n      children: \"Added Slots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"slots-list\",\n      children: slotTimes.map((slot, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [slot.from, \" - \", slot.to]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(EditSlots, \"dDvtegpIX0EDeE0AvBEGtqfDmTk=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditSlots;\nexport default EditSlots;\nvar _c;\n$RefreshReg$(_c, \"EditSlots\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","EditSlots","_s","id","navigate","station","setStation","name","slots","showSlotForm","setShowSlotForm","slotTimes","setSlotTimes","formData","setFormData","from","to","fetchStation","fetchSlotTimes","response","fetch","data","json","console","log","hello","error","handleChange","e","target","value","handleAddSlot","length","alert","method","headers","body","JSON","stringify","ok","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","required","map","slot","index","_c","$RefreshReg$"],"sources":["/Users/ihzaan/Documents/GitHub/EV-Connect/frontend/src/components/EditSlots.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport \"../styles/EditSlot.css\";\n\nconst EditSlots = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [station, setStation] = useState({ name: \"Demo Station\", slots: 5 }); // Dummy data for now\n  const [showSlotForm, setShowSlotForm] = useState(false);\n  const [slotTimes, setSlotTimes] = useState([]);\n  const [formData, setFormData] = useState({ from: \"\", to: \"\" });\n\n  useEffect(() => {\n    fetchStation();\n    fetchSlotTimes();\n  }, []);\n\n  // Fetch station details\n  const fetchStation = async () => {\n    try {\n      const response = await fetch(`http://localhost:5006/api/slot/stations/fetch/${id}`);\n      const data = await response.json();\n      console.log(hello);\n      setStation(data);\n    } catch (error) {\n      console.error(\"Error fetching station details:\", error);\n    }\n  };\n\n  // Fetch existing slot times\n  const fetchSlotTimes = async () => {\n    try {\n      const response = await fetch(`http://localhost:5006/api/slots/${id}`);\n      const data = await response.json();\n      setSlotTimes(data);\n    } catch (error) {\n      console.error(\"Error fetching slot times:\", error);\n    }\n  };\n\n  // Handle input change\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  // Add slot time to database\n  const handleAddSlot = async () => {\n    if (slotTimes.length >= station.slots) {\n      alert(\"You have reached the maximum number of slots.\");\n      return;\n    }\n\n    try {\n      const response = await fetch(`http://localhost:5006/api/stations/slots/${id}`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(formData),\n      });\n\n      if (response.ok) {\n        setFormData({ from: \"\", to: \"\" });\n        setShowSlotForm(false);\n        fetchSlotTimes();\n      }\n    } catch (error) {\n      console.error(\"Error adding slot:\", error);\n    }\n  };\n\n  return (\n    <div className=\"edit-slots-container\">\n      <h2 className=\"header\">Edit Slots</h2>\n\n      <div className=\"station-details\">\n        <p><strong>Station Name:</strong> {station.name}</p>\n        <p><strong>Number of Slots:</strong> {station.slots}</p>\n      </div>\n\n      <button className=\"add-slot-btn\" onClick={() => setShowSlotForm(true)}>\n        âž• Add Station Slot\n      </button>\n\n      {showSlotForm && (\n        <div className=\"slot-form\">\n          <input type=\"time\" name=\"from\" value={formData.from} onChange={handleChange} required />\n          <input type=\"time\" name=\"to\" value={formData.to} onChange={handleChange} required />\n          <button className=\"submit-btn\" onClick={handleAddSlot}>Add</button>\n        </div>\n      )}\n\n      <h3 className=\"slots-header\">Added Slots</h3>\n      <ul className=\"slots-list\">\n        {slotTimes.map((slot, index) => (\n          <li key={index}>{slot.from} - {slot.to}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default EditSlots;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}