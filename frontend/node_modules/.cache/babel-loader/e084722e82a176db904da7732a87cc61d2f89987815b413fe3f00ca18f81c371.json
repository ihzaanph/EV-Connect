{"ast":null,"code":"var _jsxFileName = \"/Users/ihzaan/Documents/GitHub/EV-Connect/frontend/src/components/ViewstationEVuser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport \"../styles/ViewstaEVuser.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewStations = () => {\n  _s();\n  const [stations, setStations] = useState([]);\n  const [selectedStation, setSelectedStation] = useState(null);\n  useEffect(() => {\n    fetchStations();\n  }, []);\n\n  // Fetch Charging Stations\n  const fetchStations = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5006/api/charging-stations-evuser\");\n      const data = await response.json();\n      setStations(data);\n    } catch (error) {\n      console.error(\"Error fetching stations:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-stations-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Find Nearby Charging Stations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-box\",\n      children: /*#__PURE__*/_jsxDEV(LoadScript, {\n        googleMapsApiKey: \"\",\n        children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n          mapContainerClassName: \"map-container\",\n          center: {\n            lat: 10.0,\n            lng: 76.0\n          } // Default center\n          ,\n          zoom: 10,\n          children: [stations.map(station => /*#__PURE__*/_jsxDEV(Marker, {\n            position: {\n              lat: station.latitude,\n              lng: station.longitude\n            },\n            onClick: () => setSelectedStation(station)\n          }, station._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)), selectedStation && /*#__PURE__*/_jsxDEV(InfoWindow, {\n            position: {\n              lat: selectedStation.latitude,\n              lng: selectedStation.longitude\n            },\n            onCloseClick: () => setSelectedStation(null),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-window\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: selectedStation.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: selectedStation.operationalStatus === \"active\" ? \"active\" : \"inactive\",\n                  children: selectedStation.operationalStatus\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 30\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewStations, \"ZLFFXyx81HIQf73cb4A34Npj9n4=\");\n_c = ViewStations;\nexport default ViewStations;\nvar _c;\n$RefreshReg$(_c, \"ViewStations\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","LoadScript","Marker","InfoWindow","jsxDEV","_jsxDEV","ViewStations","_s","stations","setStations","selectedStation","setSelectedStation","fetchStations","response","fetch","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","googleMapsApiKey","mapContainerClassName","center","lat","lng","zoom","map","station","position","latitude","longitude","onClick","_id","onCloseClick","name","operationalStatus","_c","$RefreshReg$"],"sources":["/Users/ihzaan/Documents/GitHub/EV-Connect/frontend/src/components/ViewstationEVuser.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport \"../styles/ViewstaEVuser.css\";\n\nconst ViewStations = () => {\n  const [stations, setStations] = useState([]);\n  const [selectedStation, setSelectedStation] = useState(null);\n\n  useEffect(() => {\n    fetchStations();\n  }, []);\n\n  // Fetch Charging Stations\n  const fetchStations = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5006/api/charging-stations-evuser\");\n      const data = await response.json();\n      setStations(data);\n    } catch (error) {\n      console.error(\"Error fetching stations:\", error);\n    }\n  };\n\n  return (\n    <div className=\"view-stations-container\">\n      <h2>Find Nearby Charging Stations</h2>\n      <div className=\"map-box\">\n        <LoadScript googleMapsApiKey=\"\">\n          <GoogleMap\n            mapContainerClassName=\"map-container\"\n            center={{ lat: 10.0, lng: 76.0 }} // Default center\n            zoom={10}\n          >\n            {stations.map((station) => (\n              <Marker\n                key={station._id}\n                position={{ lat: station.latitude, lng: station.longitude }}\n                onClick={() => setSelectedStation(station)}\n              />\n            ))}\n\n            {/* Show Info Window on Click */}\n            {selectedStation && (\n              <InfoWindow\n                position={{ lat: selectedStation.latitude, lng: selectedStation.longitude }}\n                onCloseClick={() => setSelectedStation(null)}\n              >\n                <div className=\"info-window\">\n                  <h4>{selectedStation.name}</h4>\n                  <p>Status: <span className={selectedStation.operationalStatus === \"active\" ? \"active\" : \"inactive\"}>\n                    {selectedStation.operationalStatus}\n                  </span></p>\n                </div>\n              </InfoWindow>\n            )}\n          </GoogleMap>\n        </LoadScript>\n      </div>\n    </div>\n  );\n};\n\nexport default ViewStations;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}