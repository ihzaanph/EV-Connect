{"ast":null,"code":"var _jsxFileName = \"/Users/ihzaan/Documents/GitHub/EV-Connect/frontend/src/components/UpdateStation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateStation = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    latitude: \"\",\n    longitude: \"\",\n    slots: \"\"\n  });\n  useEffect(() => {\n    fetch(`http://localhost:5006/api/stations/${id}`).then(res => res.json()).then(data => setFormData(data));\n  }, [id]);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleUpdate = async e => {\n    e.preventDefault();\n    await fetch(`http://localhost:5006/api/stations/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    });\n    navigate(\"/operator/manage-stations\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Charging Station\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpdate,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"latitude\",\n        value: formData.latitude,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"longitude\",\n        value: formData.longitude,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"slots\",\n        value: formData.slots,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Station\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateStation, \"cBUpFAlt7dXx+AsvYogoOzGUt88=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdateStation;\nexport default UpdateStation;\nvar _c;\n$RefreshReg$(_c, \"UpdateStation\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","UpdateStation","_s","id","navigate","formData","setFormData","name","latitude","longitude","slots","fetch","then","res","json","data","handleChange","e","target","value","handleUpdate","preventDefault","method","headers","body","JSON","stringify","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","_c","$RefreshReg$"],"sources":["/Users/ihzaan/Documents/GitHub/EV-Connect/frontend/src/components/UpdateStation.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nconst UpdateStation = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    latitude: \"\",\n    longitude: \"\",\n    slots: \"\",\n  });\n\n  useEffect(() => {\n    fetch(`http://localhost:5006/api/stations/${id}`)\n      .then((res) => res.json())\n      .then((data) => setFormData(data));\n  }, [id]);\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleUpdate = async (e) => {\n    e.preventDefault();\n    await fetch(`http://localhost:5006/api/stations/${id}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(formData),\n    });\n    navigate(\"/operator/manage-stations\");\n  };\n\n  return (\n    <div style={{ textAlign: \"center\", padding: \"20px\" }}>\n      <h2>Update Charging Station</h2>\n      <form onSubmit={handleUpdate}>\n        <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} required />\n        <input type=\"number\" name=\"latitude\" value={formData.latitude} onChange={handleChange} required />\n        <input type=\"number\" name=\"longitude\" value={formData.longitude} onChange={handleChange} required />\n        <input type=\"number\" name=\"slots\" value={formData.slots} onChange={handleChange} required />\n        <button type=\"submit\">Update Station</button>\n      </form>\n    </div>\n  );\n};\n\nexport default UpdateStation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}